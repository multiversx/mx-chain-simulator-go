name: Publish Docker image

on:
  release:
    types: [published]
  pull_request:

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: 1.20.7
        id: go

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build and run chain simulator to fetch configs
        run: |
          cd cmd/chainsimulator 
          go build
          ./chainsimulator --fetch-configs-and-close

      # TODO: remove this when https://github.com/actions/runner-images/issues/11471 is fully resolved
      - name: Set up QEMU for ARM64
        if: matrix.platform == 'linux/arm64'
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: multiversx/chainsimulator

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name == 'release' && github.event.action == 'published' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

